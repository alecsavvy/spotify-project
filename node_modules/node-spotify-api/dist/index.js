"use strict";Object.defineProperty(exports,"__esModule",{value:true});var rp=require("request-promise");var TOKEN_URI="https://accounts.spotify.com/api/token";var SEARCH_URI="https://api.spotify.com/v1/search?type=";var Spotify=function(){function Spotify(credentials){this.credentials=credentials;if(!credentials||!credentials.id||!credentials.secret){throw new Error('Could not initialize Spotify client. You must supply an object containing your Spotify client "id" and "secret".')}this.credentials={id:credentials.id,secret:credentials.secret};this.token}Spotify.prototype.search=function(search,cb){var _this=this;var request;var opts={method:"GET",uri:SEARCH_URI+search.type+"&q="+search.query+"&limit="+(search.limit||"20"),json:true};if(!search||!search.type||!search.query){throw new Error("You must specify a type and query for your search.")}if(!this.token||!this.token.expires_in||!this.token.expires_at||!this.token.access_token||this.isTokenExpired()){request=this.setToken().then(function(){opts.headers=_this.getTokenHeader();return rp(opts)})}else{opts.headers=this.getTokenHeader();request=rp(opts)}if(cb){request.then(function(response){return cb(null,response)}).catch(function(err){return cb(err,null)})}else{return request}};Spotify.prototype.request=function(query,cb){var _this=this;if(!query||typeof query!=="string"){throw new Error("You must pass in a Spotify API endpoint to use this method.")}var request;var opts={method:"GET",uri:query,json:true};if(!this.token||!this.token.expires_in||!this.token.expires_at||!this.token.access_token||this.isTokenExpired()){request=this.setToken().then(function(){opts.headers=_this.getTokenHeader();return rp(opts)})}else{opts.headers=this.getTokenHeader();request=rp(opts)}if(cb){request.then(function(response){return cb(null,response)}).catch(function(err){return cb(err,null)})}else{return request}};Spotify.prototype.isTokenExpired=function(){if(this.token){if(Date.now()/1e3>=this.token.expires_at-300){return true}}return false};Spotify.prototype.setToken=function(){var _this=this;var opts={method:"POST",uri:TOKEN_URI,form:{grant_type:"client_credentials"},headers:this.getCredentialHeader(),json:true};return rp(opts).then(function(token){_this.token=token;var currentTime=new Date;var expireTime=new Date(+currentTime);return _this.token.expires_at=+expireTime/1e3+_this.token.expires_in})};Spotify.prototype.getTokenHeader=function(){if(!this.token||!this.token.access_token){throw new Error("An error has occurred. Make sure you're using a valid client id and secret.'")}return{Authorization:"Bearer "+this.token.access_token}};Spotify.prototype.getCredentialHeader=function(){return{Authorization:"Basic "+new Buffer(this.credentials.id+":"+this.credentials.secret).toString("base64")}};return Spotify}();exports.default=Spotify;